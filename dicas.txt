Dicas para os novatos, como eu, em laravel e laravel-modules.

1° de tudo, depois de instalar/baixar o laravel-modules:
- Vá em config/modules.php e ache 'paths' e deixe ele assim:

`
'paths' => [
        /*
        |--------------------------------------------------------------------------
        | Modules path
        |--------------------------------------------------------------------------
        |
        | This path is used to save the generated module.
        | This path will also be added automatically to the list of scanned folders.
        |
        */
        'modules' => base_path('Modules'),

        /*
        |--------------------------------------------------------------------------
        | Modules assets path
        |--------------------------------------------------------------------------
        |
        | Here you may update the modules' assets path.
        |
        */
        'assets' => public_path('modules'),

        /*
        |--------------------------------------------------------------------------
        | The migrations' path
        |--------------------------------------------------------------------------
        |
        | Where you run the 'module:publish-migration' command, where do you publish the
        | the migration files?
        |
        */
        'migration' => base_path('database/migrations'),

        /*
        |--------------------------------------------------------------------------
        | The app path
        |--------------------------------------------------------------------------
        |
        | app folder name
        | for example can change it to 'src' or 'App'
        */
        'app_folder' => 'app/',

        /*
        |--------------------------------------------------------------------------
        | Generator path
        |--------------------------------------------------------------------------
        | Customise the paths where the folders will be generated.
        | Setting the generate key to false will not generate that folder
        */
        /* 'generator' => [
            // app/
            'actions' => ['path' => 'app/Actions', 'generate' => false],
            'casts' => ['path' => 'app/Casts', 'generate' => false],
            'channels' => ['path' => 'app/Broadcasting', 'generate' => false],
            'class' => ['path' => 'app/Classes', 'generate' => false],
            'command' => ['path' => 'app/Console', 'generate' => false],
            'component-class' => ['path' => 'app/View/Components', 'generate' => false],
            'emails' => ['path' => 'app/Emails', 'generate' => false],
            'event' => ['path' => 'app/Events', 'generate' => false],
            'enums' => ['path' => 'app/Enums', 'generate' => false],
            'exceptions' => ['path' => 'app/Exceptions', 'generate' => false],
            'jobs' => ['path' => 'app/Jobs', 'generate' => false],
            'helpers' => ['path' => 'app/Helpers', 'generate' => false],
            'interfaces' => ['path' => 'app/Interfaces', 'generate' => false],
            'listener' => ['path' => 'app/Listeners', 'generate' => false],
            'model' => ['path' => 'app/Models', 'generate' => false],
            'notifications' => ['path' => 'app/Notifications', 'generate' => false],
            'observer' => ['path' => 'app/Observers', 'generate' => false],
            'policies' => ['path' => 'app/Policies', 'generate' => false],
            'provider' => ['path' => 'app/Providers', 'generate' => true],
            'repository' => ['path' => 'app/Repositories', 'generate' => false],
            'resource' => ['path' => 'app/Transformers', 'generate' => false],
            'route-provider' => ['path' => 'app/Providers', 'generate' => true],
            'rules' => ['path' => 'app/Rules', 'generate' => false],
            'services' => ['path' => 'app/Services', 'generate' => false],
            'scopes' => ['path' => 'app/Models/Scopes', 'generate' => false],
            'traits' => ['path' => 'app/Traits', 'generate' => false],

            // app/Http/
            'controller' => ['path' => 'app/Http/Controllers', 'generate' => true],
            'filter' => ['path' => 'app/Http/Middleware', 'generate' => false],
            'request' => ['path' => 'app/Http/Requests', 'generate' => false],

            // config/
            'config' => ['path' => 'config', 'generate' => true],

            // database/
            'factory' => ['path' => 'database/factories', 'generate' => true],
            'migration' => ['path' => 'database/migrations', 'generate' => true],
            'seeder' => ['path' => 'database/seeders', 'generate' => true],

            // lang/
            'lang' => ['path' => 'lang', 'generate' => false],

            // resource/
            'assets' => ['path' => 'resources/assets', 'generate' => true],
            'component-view' => ['path' => 'resources/views/components', 'generate' => false],
            'views' => ['path' => 'resources/views', 'generate' => true],

            // routes/
            'routes' => ['path' => 'routes', 'generate' => true],

            // tests/
            'test-feature' => ['path' => 'tests/Feature', 'generate' => true],
            'test-unit' => ['path' => 'tests/Unit', 'generate' => true],
        ], */
        'generator' => [
            'assets' => ['path' => 'Assets', 'generate' => true],
            'config' => ['path' => 'Config', 'generate' => true],
            'command' => ['path' => 'Console', 'generate' => true],
            'migration' => ['path' => 'Database/Migrations', 'generate' => true],
            'seeder' => ['path' => 'Database/Seeders', 'generate' => true],
            'model' => ['path' => 'Entities', 'generate' => true],
            'controller' => ['path' => 'Http/Controllers', 'generate' => true],
            'filter' => ['path' => 'Http/Middleware', 'generate' => true],
            'request' => ['path' => 'Http/Requests', 'generate' => true],
            'routes' => ['path' => 'Http', 'generate' => true], // Isso criará routes.php na pasta Http
            'provider' => ['path' => 'Providers', 'generate' => true],
            'lang' => ['path' => 'Resources/lang', 'generate' => true],
            'views' => ['path' => 'Resources/views', 'generate' => true],
            'repository' => ['path' => 'Repositories', 'generate' => true],
            'test-feature' => ['path' => 'Tests/Feature', 'generate' => true],
            'test-unit' => ['path' => 'Tests/Unit', 'generate' => true],
        ],
    ],
`

Vai por mim, se não estiver desse jeito vai dar muitos problemas.

2° para se criar um modulo/module:
- Vá até o terminal e digite: php artisan module:make <nome_modulo>

Seu modulo vai ser criado.

3° criando o schema:
- Pelo fato de estudar usando postgresql é necessário criar o schema, para isso vá até o
terminal e digite: php artisan module:make-migrate create_<nome_module>_schema_only <nome_module> --plain

Dentro precisa deixar assim:
`
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\DB;

class CreateProdutosSchemaOnly extends Migration
{
    public function up()
    {
        DB::statement('CREATE SCHEMA IF NOT EXISTS produtos');
    }

    public function down(){}
}

`
Caso contrario vai dar erro.

** Caso de problema ** use:
php artisan make:migration create_usuarios_schema_only

e depois:

mv database/migrations/2025_05_07_141223_create_usuarios_schema_only.php Modules/Usuarios/Database/Migrations/



4° Criando as informações da tabela:
- No terminal: php artisan module:make-migrate create_<nome_module>_table <nome_module>
Dentro algo similar a isso:
`
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateProdutosTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('produtos.produtos', function (Blueprint $table) {
            $table->id();
            $table->string('nome');
            $table->text('descricao')->nullable();
            $table->decimal('preco', 10, 2);
            $table->integer('quantidade');
            $table->string('codigo_barras')->unique();
            $table->string('categoria');
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        // Schema::dropIfExists('produtos.produtos');
    }
}

`

5° subindo as migrations:
- No terminal: php artisan module:migrate <nome_module>
Se estiver configurado certo vai subir.


*COMANDOS MAIS USADOS*

# CRIAR MODULO:
php artisan module:make <nome_modulo>

# CRIAR MIGRATION ou SCHEMA
- SCHEMA
php artisan module:make-migration create_<nome_modulo>_schema.only <nome_modulo> (OBS: se sair desse padrão dá probelma)

- MIGRATION
php artisan module:make-migration create_<nome_module>_table <nome_module> (OBS: se sair desse padrão da problema)

# CRIAR Requests
- Serve para validações dos campos
php artisan module:make-request Store<nome_modulo>Request <nome_modulo>

caminho: Modules/<nome_modulo>/Http/Requests/<arquivo_criado>

# CRIAR CONTROLLER
php artisan module:make-controller <nome_modulo>Controller <nome_modulo>

caminho: Modules/<nome_modulo>/Http/Controllers/<arquivo_criado>

# CRIAR MODEL:
php artisan module:make-model Model<nome_modulo> <nome_modulo>

Caminho: Modules/<nome_modulo>/Entities/<arquivo_criado>